package pipedriveintegration

import (
	"github.com/flowbaker/flowbaker/pkg/domain"
)

var (
	PipedriveSchema = domain.Integration{
		ID:          domain.IntegrationType_Pipedrive,
		Name:        "Pipedrive",
		Description: "Manage your sales pipeline with Pipedrive CRM.",
		CredentialProperties: []domain.NodeProperty{
			{
				Key:         "api_token",
				Name:        "API Token",
				Description: "Your Pipedrive API token",
				Required:    true,
				Type:        domain.NodePropertyType_String,
			},
		},
		Actions: []domain.IntegrationAction{
			{
				ID:          "create_activity",
				Name:        "Create Activity",
				Description: "Create a new activity in Pipedrive",
				ActionType:  PipedriveIntegrationActionType_CreateActivity,
				Properties: []domain.NodeProperty{
					{
						Key:         "subject",
						Name:        "Subject",
						Description: "The subject of the activity",
						Required:    true,
						Type:        domain.NodePropertyType_String,
					},
					{
						Key:          "type",
						Name:         "Type",
						Description:  "The type of the activity",
						Required:     false,
						Type:         domain.NodePropertyType_String,
						Peekable:     true,
						PeekableType: PipedriveIntegrationPeekable_ActivityTypes,
					},
					{
						Key:          "owner_id",
						Name:         "Owner ID",
						Description:  "The ID of the user who owns the activity",
						Required:     false,
						Type:         domain.NodePropertyType_Number,
						Peekable:     true,
						PeekableType: PipedriveIntegrationPeekable_Users,
					},
					{
						Key:          "deal_id",
						Name:         "Deal ID",
						Description:  "The ID of the deal this activity is associated with",
						Required:     false,
						Type:         domain.NodePropertyType_Number,
						Peekable:     true,
						PeekableType: PipedriveIntegrationPeekable_Deals,
					},
					{
						Key:          "org_id",
						Name:         "Organization ID",
						Description:  "The ID of the organization this activity is associated with",
						Required:     false,
						Type:         domain.NodePropertyType_Number,
						Peekable:     true,
						PeekableType: PipedriveIntegrationPeekable_Organizations,
					},
					{
						Key:          "project_id",
						Name:         "Project ID",
						Description:  "The ID of the project this activity is associated with",
						Required:     false,
						Type:         domain.NodePropertyType_Number,
						Peekable:     true,
						PeekableType: PipedriveIntegrationPeekable_Projects,
					},
					{
						Key:          "participant_id",
						Name:         "Participant ID",
						Description:  "The ID of the participant of the activity",
						Required:     false,
						Type:         domain.NodePropertyType_Number,
						Peekable:     true,
						PeekableType: PipedriveIntegrationPeekable_Persons,
					},
					{
						Key:          "lead_id",
						Name:         "Lead ID",
						Description:  "The ID of the lead this activity is associated with",
						Required:     false,
						Type:         domain.NodePropertyType_Number,
						Peekable:     true,
						PeekableType: PipedriveIntegrationPeekable_Leads,
					},
					{
						Key:         "due_date",
						Name:        "Due Date",
						Description: "Due date of the activity (YYYY-MM-DD)",
						Required:    false,
						Type:        domain.NodePropertyType_String,
					},
					{
						Key:         "due_time",
						Name:        "Due Time",
						Description: "Due time of the activity (HH:MM)",
						Required:    false,
						Type:        domain.NodePropertyType_String,
					},
					{
						Key:         "duration",
						Name:        "Duration",
						Description: "Duration of the activity (HH:MM)",
						Required:    false,
						Type:        domain.NodePropertyType_String,
					},
					{
						Key:         "busy",
						Name:        "Busy",
						Description: "Whether the activity marks the assignee as busy (true = busy, false = not busy)",
						Required:    false,
						Type:        domain.NodePropertyType_Boolean,
					},
					{
						Key:         "done",
						Name:        "Done",
						Description: "Whether the activity is done or not (true = not done, false = done)",
						Required:    false,
						Type:        domain.NodePropertyType_Boolean,
					},
					{
						Key:         "public_description",
						Name:        "Public Description",
						Description: "Public description of the activity",
						Required:    false,
						Type:        domain.NodePropertyType_Text,
					},

					{
						Key:         "note",
						Name:        "Note",
						Description: "Note about the activity",
						Required:    false,
						Type:        domain.NodePropertyType_Text,
					},
				},
			},
			{
				ID:          "update_activity",
				Name:        "Update Activity",
				Description: "Update an existing activity in Pipedrive",
				ActionType:  PipedriveIntegrationActionType_UpdateActivity,
				Properties: []domain.NodeProperty{
					{
						Key:          "id",
						Name:         "Activity ID",
						Description:  "The ID of the activity to update",
						Required:     true,
						Type:         domain.NodePropertyType_Number,
						Peekable:     true,
						PeekableType: PipedriveIntegrationPeekable_Activities,
					},
					{
						Key:         "subject",
						Name:        "Subject",
						Description: "The subject of the activity",
						Required:    false,
						Type:        domain.NodePropertyType_String,
					},
					{
						Key:          "type",
						Name:         "Type",
						Description:  "The type of the activity",
						Required:     false,
						Type:         domain.NodePropertyType_String,
						Peekable:     true,
						PeekableType: PipedriveIntegrationPeekable_ActivityTypes,
					},
					{
						Key:          "owner_id",
						Name:         "Owner ID",
						Description:  "The ID of the user who owns the activity",
						Required:     false,
						Type:         domain.NodePropertyType_Number,
						Peekable:     true,
						PeekableType: PipedriveIntegrationPeekable_Users,
					},
					{
						Key:          "deal_id",
						Name:         "Deal ID",
						Description:  "The ID of the deal this activity is associated with",
						Required:     false,
						Type:         domain.NodePropertyType_Number,
						Peekable:     true,
						PeekableType: PipedriveIntegrationPeekable_Deals,
					},
					{
						Key:          "lead_id",
						Name:         "Lead ID",
						Description:  "The ID of the lead this activity is associated with",
						Required:     false,
						Type:         domain.NodePropertyType_Number,
						Peekable:     true,
						PeekableType: PipedriveIntegrationPeekable_Leads,
					},
					{
						Key:          "person_id",
						Name:         "Person ID",
						Description:  "The ID of the person this activity is associated with",
						Required:     false,
						Type:         domain.NodePropertyType_Number,
						Peekable:     true,
						PeekableType: PipedriveIntegrationPeekable_Persons,
					},
					{
						Key:          "org_id",
						Name:         "Organization ID",
						Description:  "The ID of the organization this activity is associated with",
						Required:     false,
						Type:         domain.NodePropertyType_Number,
						Peekable:     true,
						PeekableType: PipedriveIntegrationPeekable_Organizations,
					},
					{
						Key:          "project_id",
						Name:         "Project ID",
						Description:  "The ID of the project this activity is associated with",
						Required:     false,
						Type:         domain.NodePropertyType_Number,
						Peekable:     true,
						PeekableType: PipedriveIntegrationPeekable_Projects,
					},
					{
						Key:          "participant_id",
						Name:         "Participant ID",
						Description:  "The ID of the participant of the activity",
						Required:     false,
						Type:         domain.NodePropertyType_Number,
						Peekable:     true,
						PeekableType: PipedriveIntegrationPeekable_Persons,
					},
					{
						Key:         "due_date",
						Name:        "Due Date",
						Description: "Due date of the activity (YYYY-MM-DD)",
						Required:    false,
						Type:        domain.NodePropertyType_String,
					},
					{
						Key:         "due_time",
						Name:        "Due Time",
						Description: "Due time of the activity (HH:MM)",
						Required:    false,
						Type:        domain.NodePropertyType_String,
					},
					{
						Key:         "duration",
						Name:        "Duration",
						Description: "Duration of the activity (HH:MM)",
						Required:    false,
						Type:        domain.NodePropertyType_String,
					},
					{
						Key:         "busy",
						Name:        "Busy",
						Description: "Whether the activity marks the assignee as busy (true = busy, false = not busy)",
						Required:    false,
						Type:        domain.NodePropertyType_Boolean,
					},
					{
						Key:         "done",
						Name:        "Done",
						Description: "Whether the activity is done or not (true = not done, false = done)",
						Required:    false,
						Type:        domain.NodePropertyType_Boolean,
					},
					{
						Key:         "location",
						Name:        "Location",
						Description: "Location of the activity",
						Required:    false,
						Type:        domain.NodePropertyType_Text,
					},
					{
						Key:         "public_description",
						Name:        "Public Description",
						Description: "Public description of the activity",
						Required:    false,
						Type:        domain.NodePropertyType_Text,
					},
					{
						Key:         "note",
						Name:        "Note",
						Description: "Note about the activity",
						Required:    false,
						Type:        domain.NodePropertyType_Text,
					},
				},
			},
			{
				ID:          "get_activity",
				Name:        "Get Activity",
				Description: "Get details of a specific activity from Pipedrive",
				ActionType:  PipedriveIntegrationActionType_GetActivity,
				Properties: []domain.NodeProperty{
					{
						Key:          "id",
						Name:         "Activity ID",
						Description:  "The ID of the activity to retrieve",
						Required:     true,
						Type:         domain.NodePropertyType_Number,
						Peekable:     true,
						PeekableType: PipedriveIntegrationPeekable_Activities,
					},
				},
			},
			{
				ID:          "delete_activity",
				Name:        "Delete Activity",
				Description: "Delete an activity from Pipedrive",
				ActionType:  PipedriveIntegrationActionType_DeleteActivity,
				Properties: []domain.NodeProperty{
					{
						Key:          "id",
						Name:         "Activity ID",
						Description:  "The ID of the activity to delete",
						Required:     true,
						Type:         domain.NodePropertyType_Number,
						Peekable:     true,
						PeekableType: PipedriveIntegrationPeekable_Activities,
					},
				},
			},
			{
				ID:          "list_activities",
				Name:        "List Activities",
				Description: "Get a list of all activities from Pipedrive",
				ActionType:  PipedriveIntegrationActionType_ListActivities,
				Properties: []domain.NodeProperty{
					{
						Key:         "cursor",
						Name:        "Cursor",
						Description: "For pagination, the marker representing the first item on the next page",
						Required:    false,
						Type:        domain.NodePropertyType_String,
					},
					{
						Key:         "limit",
						Name:        "Limit",
						Description: "For pagination, the limit of entries to be returned (max 500, default 100)",
						Required:    false,
						Type:        domain.NodePropertyType_Number,
					},
					{
						Key:         "since",
						Name:        "Since",
						Description: "The time boundary that points to the start of the range of data. Datetime in ISO 8601 format (e.g. 2022-11-01 08:55:59)",
						Required:    false,
						Type:        domain.NodePropertyType_String,
					},
					{
						Key:         "until",
						Name:        "Until",
						Description: "The time boundary that points to the end of the range of data. Datetime in ISO 8601 format (e.g. 2022-11-01 08:55:59)",
						Required:    false,
						Type:        domain.NodePropertyType_String,
					},

					{
						Key:         "done",
						Name:        "Done",
						Description: "Whether the activity is done or not. If omitted, returns both",
						Required:    false,
						Type:        domain.NodePropertyType_String,
						Options: []domain.NodePropertyOption{
							{Label: "All", Value: "all"},
							{Label: "Not Done", Value: "false"},
							{Label: "Done", Value: "true"},
						},
					},
				},
			},
			{
				ID:          "create_deal",
				Name:        "Create Deal",
				Description: "Create a new deal in Pipedrive",
				ActionType:  PipedriveIntegrationActionType_CreateDeal,
				Properties: []domain.NodeProperty{
					{
						Key:         "title",
						Name:        "Title",
						Description: "The title of the deal",
						Required:    true,
						Type:        domain.NodePropertyType_String,
					},
					{
						Key:         "value",
						Name:        "Value",
						Description: "The monetary value of the deal",
						Required:    false,
						Type:        domain.NodePropertyType_Number,
					},
					{
						Key:          "currency",
						Name:         "Currency",
						Description:  "The currency of the deal (e.g., USD, EUR)",
						Required:     false,
						Type:         domain.NodePropertyType_String,
						Peekable:     true,
						PeekableType: PipedriveIntegrationPeekable_Currencies,
					},
					{
						Key:          "person_id",
						Name:         "Person ID",
						Description:  "The ID of the person this deal is associated with",
						Required:     false,
						Type:         domain.NodePropertyType_Number,
						Peekable:     true,
						PeekableType: PipedriveIntegrationPeekable_Persons,
					},
					{
						Key:          "org_id",
						Name:         "Organization ID",
						Description:  "The ID of the organization this deal is associated with",
						Required:     false,
						Type:         domain.NodePropertyType_Number,
						Peekable:     true,
						PeekableType: PipedriveIntegrationPeekable_Organizations,
					},
					{
						Key:          "pipeline_id",
						Name:         "Pipeline",
						Description:  "The pipeline this deal belongs to",
						Required:     false,
						Type:         domain.NodePropertyType_Number,
						Peekable:     true,
						PeekableType: PipedriveIntegrationPeekable_Pipelines,
					},
					{
						Key:          "stage_id",
						Name:         "Stage",
						Description:  "The stage of the pipeline",
						Required:     false,
						Type:         domain.NodePropertyType_Number,
						Peekable:     true,
						PeekableType: PipedriveIntegrationPeekable_Stages,
					},
					{
						Key:         "status",
						Name:        "Status",
						Description: "The status of the deal (open, won, lost, deleted)",
						Required:    false,
						Type:        domain.NodePropertyType_String,
						Options: []domain.NodePropertyOption{
							{Label: "Open", Value: "open"},
							{Label: "Won", Value: "won"},
							{Label: "Lost", Value: "lost"},
							{Label: "Deleted", Value: "deleted"},
						},
					},
				},
			},
			{
				ID:          "update_deal",
				Name:        "Update Deal",
				Description: "Update an existing deal in Pipedrive",
				ActionType:  PipedriveIntegrationActionType_UpdateDeal,
				Properties: []domain.NodeProperty{
					{
						Key:          "id",
						Name:         "Deal ID",
						Description:  "The ID of the deal to update",
						Required:     true,
						Type:         domain.NodePropertyType_Number,
						Peekable:     true,
						PeekableType: PipedriveIntegrationPeekable_Deals,
					},
					{
						Key:         "title",
						Name:        "Title",
						Description: "The title of the deal",
						Required:    false,
						Type:        domain.NodePropertyType_String,
					},
					{
						Key:         "value",
						Name:        "Value",
						Description: "The monetary value of the deal",
						Required:    false,
						Type:        domain.NodePropertyType_Number,
					},
					{
						Key:          "currency",
						Name:         "Currency",
						Description:  "The currency of the deal (e.g., USD, EUR)",
						Required:     false,
						Type:         domain.NodePropertyType_String,
						Peekable:     true,
						PeekableType: PipedriveIntegrationPeekable_Currencies,
					},
					{
						Key:          "person_id",
						Name:         "Person ID",
						Description:  "The ID of the person this deal is associated with",
						Required:     false,
						Type:         domain.NodePropertyType_Number,
						Peekable:     true,
						PeekableType: PipedriveIntegrationPeekable_Persons,
					},
					{
						Key:          "org_id",
						Name:         "Organization ID",
						Description:  "The ID of the organization this deal is associated with",
						Required:     false,
						Type:         domain.NodePropertyType_Number,
						Peekable:     true,
						PeekableType: PipedriveIntegrationPeekable_Organizations,
					},
					{
						Key:          "pipeline_id",
						Name:         "Pipeline",
						Description:  "The pipeline this deal belongs to",
						Required:     false,
						Type:         domain.NodePropertyType_Number,
						Peekable:     true,
						PeekableType: PipedriveIntegrationPeekable_Pipelines,
					},
					{
						Key:          "stage_id",
						Name:         "Stage",
						Description:  "The stage of the pipeline",
						Required:     false,
						Type:         domain.NodePropertyType_Number,
						Peekable:     true,
						PeekableType: PipedriveIntegrationPeekable_Stages,
					},
					{
						Key:         "status",
						Name:        "Status",
						Description: "The status of the deal (open, won, lost, deleted)",
						Required:    false,
						Type:        domain.NodePropertyType_String,
						Options: []domain.NodePropertyOption{
							{Label: "Open", Value: "open"},
							{Label: "Won", Value: "won"},
							{Label: "Lost", Value: "lost"},
							{Label: "Deleted", Value: "deleted"},
						},
					},
				},
			},
			{
				ID:          "get_deal",
				Name:        "Get Deal",
				Description: "Get details of a specific deal from Pipedrive",
				ActionType:  PipedriveIntegrationActionType_GetDeal,
				Properties: []domain.NodeProperty{
					{
						Key:          "id",
						Name:         "Deal ID",
						Description:  "The ID of the deal to retrieve",
						Required:     true,
						Type:         domain.NodePropertyType_Number,
						Peekable:     true,
						PeekableType: PipedriveIntegrationPeekable_Deals,
					},
				},
			},
			{
				ID:          "delete_deal",
				Name:        "Delete Deal",
				Description: "Delete a deal from Pipedrive",
				ActionType:  PipedriveIntegrationActionType_DeleteDeal,
				Properties: []domain.NodeProperty{
					{
						Key:          "id",
						Name:         "Deal ID",
						Description:  "The ID of the deal to delete",
						Required:     true,
						Type:         domain.NodePropertyType_Number,
						Peekable:     true,
						PeekableType: PipedriveIntegrationPeekable_Deals,
					},
				},
			},
			{
				ID:          "list_deals",
				Name:        "List Deals",
				Description: "Get a list of all deals from Pipedrive",
				ActionType:  PipedriveIntegrationActionType_ListDeals,
				Properties: []domain.NodeProperty{
					// {
					// 	Key:         "query_mode",
					// 	Name:        "Filter Mode",
					// 	Description: "Choose how to filter the results (not required)",
					// 	Required:    false,
					// 	Type:        domain.NodePropertyType_String,
					// 	Options: []domain.NodePropertyOption{
					// 		{Label: "No Filter", Value: "none"},
					// 		{Label: "Custom Filters", Value: "custom"},
					// 		{Label: "Saved Filter", Value: "filter"},
					// 	},
					// },
					// {
					// 	Key:         "filter_id",
					// 	Name:        "Filter ID",
					// 	Description: "Select a saved filter",
					// 	Required:    false,
					// 	Type:        domain.NodePropertyType_Number,
					// 	DependsOn: &domain.DependsOn{
					// 		PropertyKey: "query_mode",
					// 		Value:       "filter",
					// 	},
					// 	Peekable:     true,
					// 	PeekableType: PipedriveIntegrationPeekable_SavedFilters,
					// },
					// {
					// 	Key:         "ids",
					// 	Name:        "IDs",
					// 	Description: "Comma separated string array of up to 100 entity ids to fetch ",
					// 	Required:    false,
					// 	Type:        domain.NodePropertyType_String,
					// 	DependsOn: &domain.DependsOn{
					// 		PropertyKey: "query_mode",
					// 		Value:       "custom",
					// 	},
					// },
					// {
					// 	Key:          "owner_id",
					// 	Name:         "Owner ID",
					// 	Description:  "Filter by deal owner ",
					// 	Required:     false,
					// 	Type:         domain.NodePropertyType_Number,
					// 	Peekable:     true,
					// 	PeekableType: PipedriveIntegrationPeekable_Users,
					// 	DependsOn: &domain.DependsOn{
					// 		PropertyKey: "query_mode",
					// 		Value:       "custom",
					// 	},
					// },
					// {
					// 	Key:          "person_id",
					// 	Name:         "Person ID",
					// 	Description:  "Filter by linked person ",
					// 	Required:     false,
					// 	Type:         domain.NodePropertyType_Number,
					// 	Peekable:     true,
					// 	PeekableType: PipedriveIntegrationPeekable_Persons,
					// 	DependsOn: &domain.DependsOn{
					// 		PropertyKey: "query_mode",
					// 		Value:       "custom",
					// 	},
					// },
					// {
					// 	Key:          "org_id",
					// 	Name:         "Organization ID",
					// 	Description:  "Filter by organization ",
					// 	Required:     false,
					// 	Type:         domain.NodePropertyType_Number,
					// 	Peekable:     true,
					// 	PeekableType: PipedriveIntegrationPeekable_Organizations,
					// 	DependsOn: &domain.DependsOn{
					// 		PropertyKey: "query_mode",
					// 		Value:       "custom",
					// 	},
					// },
					// {
					// 	Key:          "pipeline_id",
					// 	Name:         "Pipeline ID",
					// 	Description:  "Filter by pipeline ",
					// 	Required:     false,
					// 	Type:         domain.NodePropertyType_Number,
					// 	Peekable:     true,
					// 	PeekableType: PipedriveIntegrationPeekable_Pipelines,
					// 	DependsOn: &domain.DependsOn{
					// 		PropertyKey: "query_mode",
					// 		Value:       "custom",
					// 	},
					// },
					// {
					// 	Key:          "stage_id",
					// 	Name:         "Stage ID",
					// 	Description:  "Filter by stage ",
					// 	Required:     false,
					// 	Type:         domain.NodePropertyType_Number,
					// 	Peekable:     true,
					// 	PeekableType: PipedriveIntegrationPeekable_Stages,
					// 	DependsOn: &domain.DependsOn{
					// 		PropertyKey: "query_mode",
					// 		Value:       "custom",
					// 	},
					// },
					{
						Key:         "limit",
						Name:        "Limit",
						Description: "Number of items to return (max 500, default 100)",
						Required:    false,
						Type:        domain.NodePropertyType_Number,
					},
					{
						Key:         "cursor",
						Name:        "Cursor",
						Description: "For pagination, the marker representing the first item on the next page",
						Required:    false,
						Type:        domain.NodePropertyType_String,
					},
					{
						Key:         "status",
						Name:        "Status",
						Description: "Only fetch deals with a specific status. Multiple statuses can be included as a comma separated array",
						Required:    false,
						Type:        domain.NodePropertyType_String,
						Options: []domain.NodePropertyOption{
							{Label: "Open", Value: "open"},
							{Label: "Won", Value: "won"},
							{Label: "Lost", Value: "lost"},
							{Label: "Deleted", Value: "deleted"},
						},
					},
					{
						Key:         "updated_since",
						Name:        "Updated Since",
						Description: "If set, only deals with an update_time later than or equal to this time are returned (RFC3339 format, e.g. 2025-01-01T10:20:00Z)",
						Required:    false,
						Type:        domain.NodePropertyType_String,
					},
					{
						Key:         "updated_until",
						Name:        "Updated Until",
						Description: "If set, only deals with an update_time earlier than this time are returned (RFC3339 format, e.g. 2025-01-01T10:20:00Z)",
						Required:    false,
						Type:        domain.NodePropertyType_String,
					},
					{
						Key:         "sort_by",
						Name:        "Sort By",
						Description: "The field to sort by",
						Required:    false,
						Type:        domain.NodePropertyType_String,
						Options: []domain.NodePropertyOption{
							{Label: "ID", Value: "id"},
							{Label: "Update Time", Value: "update_time"},
							{Label: "Add Time", Value: "add_time"},
						},
					},
					{
						Key:         "sort_direction",
						Name:        "Sort Direction",
						Description: "The sorting direction",
						Required:    false,
						Type:        domain.NodePropertyType_String,
						Options: []domain.NodePropertyOption{
							{Label: "Ascending", Value: "asc"},
							{Label: "Descending", Value: "desc"},
						},
					},
					{
						Key:         "include_fields",
						Name:        "Include Fields",
						Description: "Optional comma separated string array of additional fields to include. ",
						Required:    false,
						Type:        domain.NodePropertyType_ListTagInput,
						Options: []domain.NodePropertyOption{
							{Label: "Next Activity ID", Value: "next_activity_id"},
							{Label: "Last Activity ID", Value: "last_activity_id"},
							{Label: "Open Deals Count", Value: "open_deals_count"},
							{Label: "Related Open Deals Count", Value: "related_open_deals_count"},
							{Label: "Closed Deals Count", Value: "closed_deals_count"},
							{Label: "Related Closed Deals Count", Value: "related_closed_deals_count"},
							{Label: "Participant Open Deals Count", Value: "participant_open_deals_count"},
							{Label: "Participant Closed Deals Count", Value: "participant_closed_deals_count"},
							{Label: "Email Messages Count", Value: "email_messages_count"},
							{Label: "Activities Count", Value: "activities_count"},
							{Label: "Done Activities Count", Value: "done_activities_count"},
							{Label: "Undone Activities Count", Value: "undone_activities_count"},
							{Label: "Files Count", Value: "files_count"},
							{Label: "Notes Count", Value: "notes_count"},
							{Label: "Followers Count", Value: "followers_count"},
							{Label: "Won Deals Count", Value: "won_deals_count"},
							{Label: "Related Won Deals Count", Value: "related_won_deals_count"},
							{Label: "Lost Deals Count", Value: "lost_deals_count"},
							{Label: "Related Lost Deals Count", Value: "related_lost_deals_count"},
							{Label: "Last Incoming Mail Time", Value: "last_incoming_mail_time"},
							{Label: "Last Outgoing Mail Time", Value: "last_outgoing_mail_time"},
							{Label: "Marketing Status", Value: "marketing_status"},
							{Label: "DOI Status", Value: "doi_status"},
						},
					},
				},
			},
			{
				ID:          "create_person",
				Name:        "Create Person",
				Description: "Create a new person in Pipedrive",
				ActionType:  PipedriveIntegrationActionType_CreatePerson,
				Properties: []domain.NodeProperty{
					{
						Key:         "name",
						Name:        "Name",
						Description: "The name of the person",
						Required:    true,
						Type:        domain.NodePropertyType_String,
					},
					{
						Key:         "emails",
						Name:        "Email",
						Description: "Email address(es) of the person",
						Required:    false,
						Type:        domain.NodePropertyType_TagInput,
						RegexKey:    "email",
					},
					{
						Key:         "phones",
						Name:        "Phones",
						Description: "Phone number(s) of the person",
						Required:    false,
						Type:        domain.NodePropertyType_TagInput,
						RegexKey:    "phone",
					},
					{
						Key:          "org_id",
						Name:         "Organization ID",
						Description:  "The ID of the organization this person belongs to",
						Required:     false,
						Type:         domain.NodePropertyType_Number,
						Peekable:     true,
						PeekableType: PipedriveIntegrationPeekable_Organizations,
					},
					{
						Key:         "visible_to",
						Name:        "Visible To",
						Description: "The visibility of the person",
						Required:    false,
						Type:        domain.NodePropertyType_Number,
						Options: []domain.NodePropertyOption{
							{Label: "Owner & followers", Value: 1},
							{Label: "Entire company", Value: 3},
						},
					},
					{
						Key:          "owner_id",
						Name:         "Owner ID",
						Description:  "The ID of the user who owns the person",
						Required:     false,
						Type:         domain.NodePropertyType_Number,
						Peekable:     true,
						PeekableType: PipedriveIntegrationPeekable_Users,
					},
				},
			},
			{
				ID:          "update_person",
				Name:        "Update Person",
				Description: "Update an existing person in Pipedrive",
				ActionType:  PipedriveIntegrationActionType_UpdatePerson,
				Properties: []domain.NodeProperty{
					{
						Key:          "id",
						Name:         "Person ID",
						Description:  "The ID of the person to update",
						Required:     true,
						Type:         domain.NodePropertyType_Number,
						Peekable:     true,
						PeekableType: PipedriveIntegrationPeekable_Persons,
					},
					{
						Key:         "name",
						Name:        "Name",
						Description: "The name of the person",
						Required:    false,
						Type:        domain.NodePropertyType_String,
					},
					{
						Key:         "emails",
						Name:        "Emails",
						Description: "Email address(es) of the person",
						Required:    false,
						Type:        domain.NodePropertyType_TagInput,
						RegexKey:    "email",
					},
					{
						Key:         "phones",
						Name:        "Phone",
						Description: "Phone number(s) of the person",
						Required:    false,
						Type:        domain.NodePropertyType_TagInput,
						RegexKey:    "phone",
					},
					{
						Key:          "org_id",
						Name:         "Organization ID",
						Description:  "The ID of the organization this person belongs to",
						Required:     false,
						Type:         domain.NodePropertyType_Number,
						Peekable:     true,
						PeekableType: PipedriveIntegrationPeekable_Organizations,
					},
					{
						Key:         "visible_to",
						Name:        "Visible To",
						Description: "The visibility of the organization",
						Required:    false,
						Type:        domain.NodePropertyType_Number,
						Options: []domain.NodePropertyOption{
							{Label: "Owner & followers", Value: 1},
							{Label: "Entire company", Value: 3},
						},
					},
					{
						Key:          "owner_id",
						Name:         "Owner ID",
						Description:  "The ID of the user who owns the person",
						Required:     false,
						Type:         domain.NodePropertyType_Number,
						Peekable:     true,
						PeekableType: PipedriveIntegrationPeekable_Users,
					},
				},
			},
			{
				ID:          "get_person",
				Name:        "Get Person",
				Description: "Get details of a specific person from Pipedrive",
				ActionType:  PipedriveIntegrationActionType_GetPerson,
				Properties: []domain.NodeProperty{
					{
						Key:          "id",
						Name:         "Person ID",
						Description:  "The ID of the person to retrieve",
						Required:     true,
						Type:         domain.NodePropertyType_Number,
						Peekable:     true,
						PeekableType: PipedriveIntegrationPeekable_Persons,
					},
				},
			},
			{
				ID:          "delete_person",
				Name:        "Delete Person",
				Description: "Delete a person from Pipedrive",
				ActionType:  PipedriveIntegrationActionType_DeletePerson,
				Properties: []domain.NodeProperty{
					{
						Key:          "id",
						Name:         "Person ID",
						Description:  "The ID of the person to delete",
						Required:     true,
						Type:         domain.NodePropertyType_Number,
						Peekable:     true,
						PeekableType: PipedriveIntegrationPeekable_Persons,
					},
				},
			},
			{
				ID:          "list_persons",
				Name:        "List Persons",
				Description: "Get a list of all persons from Pipedrive",
				ActionType:  PipedriveIntegrationActionType_ListPersons,
				Properties: []domain.NodeProperty{
					{
						Key:         "limit",
						Name:        "Limit",
						Description: "Number of items to return (max 500, default 100)",
						Required:    false,
						Type:        domain.NodePropertyType_Number,
					},
					{
						Key:         "cursor",
						Name:        "Cursor",
						Description: "For pagination, the marker representing the first item on the next page",
						Required:    false,
						Type:        domain.NodePropertyType_String,
					},
					{
						Key:         "updated_since",
						Name:        "Updated Since",
						Description: "If set, only persons with an update_time later than or equal to this time are returned (RFC3339 format, e.g. 2025-01-01T10:20:00Z)",
						Required:    false,
						Type:        domain.NodePropertyType_String,
					},
					{
						Key:         "updated_until",
						Name:        "Updated Until",
						Description: "If set, only persons with an update_time earlier than this time are returned (RFC3339 format, e.g. 2025-01-01T10:20:00Z)",
						Required:    false,
						Type:        domain.NodePropertyType_String,
					},
					{
						Key:         "sort_by",
						Name:        "Sort By",
						Description: "The field to sort by",
						Required:    false,
						Type:        domain.NodePropertyType_String,
						Options: []domain.NodePropertyOption{
							{Label: "ID", Value: "id"},
							{Label: "Update Time", Value: "update_time"},
							{Label: "Add Time", Value: "add_time"},
						},
					},
					{
						Key:         "sort_direction",
						Name:        "Sort Direction",
						Description: "The sorting direction",
						Required:    false,
						Type:        domain.NodePropertyType_String,
						Options: []domain.NodePropertyOption{
							{Label: "Ascending", Value: "asc"},
							{Label: "Descending", Value: "desc"},
						},
					},
					{
						Key:         "include_fields",
						Name:        "Include Fields",
						Description: "Optional comma separated string array of additional fields to include. ",
						Required:    false,
						Type:        domain.NodePropertyType_ListTagInput,
						Options: []domain.NodePropertyOption{
							{Label: "Next Activity ID", Value: "next_activity_id"},
							{Label: "Last Activity ID", Value: "last_activity_id"},
							{Label: "Open Deals Count", Value: "open_deals_count"},
							{Label: "Related Open Deals Count", Value: "related_open_deals_count"},
							{Label: "Closed Deals Count", Value: "closed_deals_count"},
							{Label: "Related Closed Deals Count", Value: "related_closed_deals_count"},
							{Label: "Participant Open Deals Count", Value: "participant_open_deals_count"},
							{Label: "Participant Closed Deals Count", Value: "participant_closed_deals_count"},
							{Label: "Email Messages Count", Value: "email_messages_count"},
							{Label: "Activities Count", Value: "activities_count"},
							{Label: "Done Activities Count", Value: "done_activities_count"},
							{Label: "Undone Activities Count", Value: "undone_activities_count"},
							{Label: "Files Count", Value: "files_count"},
							{Label: "Notes Count", Value: "notes_count"},
							{Label: "Followers Count", Value: "followers_count"},
							{Label: "Won Deals Count", Value: "won_deals_count"},
							{Label: "Related Won Deals Count", Value: "related_won_deals_count"},
							{Label: "Lost Deals Count", Value: "lost_deals_count"},
							{Label: "Related Lost Deals Count", Value: "related_lost_deals_count"},
							{Label: "Last Incoming Mail Time", Value: "last_incoming_mail_time"},
							{Label: "Last Outgoing Mail Time", Value: "last_outgoing_mail_time"},
							{Label: "Marketing Status", Value: "marketing_status"},
							{Label: "DOI Status", Value: "doi_status"},
						},
					},
				},
			},
			{
				ID:          "create_organization",
				Name:        "Create Organization",
				Description: "Create a new organization in Pipedrive",
				ActionType:  PipedriveIntegrationActionType_CreateOrganization,
				Properties: []domain.NodeProperty{
					{
						Key:         "name",
						Name:        "Name",
						Description: "The name of the organization",
						Required:    true,
						Type:        domain.NodePropertyType_String,
					},
					{
						Key:          "owner_id",
						Name:         "Owner ID",
						Description:  "The ID of the user who owns the organization",
						Required:     false,
						Type:         domain.NodePropertyType_Number,
						Peekable:     true,
						PeekableType: PipedriveIntegrationPeekable_Users,
					},
					{
						Key:         "visible_to",
						Name:        "Visible To",
						Description: "The visibility of the organization",
						Required:    false,
						Type:        domain.NodePropertyType_Number,
						Options: []domain.NodePropertyOption{
							{Label: "Owner & followers", Value: 1},
							{Label: "Entire company", Value: 3},
						},
					},
					{
						Key:         "address",
						Name:        "Address",
						Description: "Address object with fields like street, city, country, postal_code",
						Required:    false,
						Type:        domain.NodePropertyType_Text,
					},
				},
			},
			{
				ID:          "update_organization",
				Name:        "Update Organization",
				Description: "Update an existing organization in Pipedrive",
				ActionType:  PipedriveIntegrationActionType_UpdateOrganization,
				Properties: []domain.NodeProperty{
					{
						Key:          "id",
						Name:         "Organization ID",
						Description:  "The ID of the organization to update",
						Required:     true,
						Type:         domain.NodePropertyType_Number,
						Peekable:     true,
						PeekableType: PipedriveIntegrationPeekable_Organizations,
					},
					{
						Key:         "name",
						Name:        "Name",
						Description: "The name of the organization",
						Required:    false,
						Type:        domain.NodePropertyType_String,
					},
					{
						Key:          "owner_id",
						Name:         "Owner ID",
						Description:  "The ID of the user who owns the organization",
						Required:     false,
						Type:         domain.NodePropertyType_Number,
						Peekable:     true,
						PeekableType: PipedriveIntegrationPeekable_Users,
					},
					{
						Key:         "visible_to",
						Name:        "Visible To",
						Description: "The visibility of the organization",
						Required:    false,
						Type:        domain.NodePropertyType_Number,
						Options: []domain.NodePropertyOption{
							{Label: "Owner & followers", Value: 1},
							{Label: "Entire company", Value: 3},
						},
					},
					{
						Key:         "address",
						Name:        "Address",
						Description: "Address object with fields like street, city, country, postal_code",
						Required:    false,
						Type:        domain.NodePropertyType_Text,
					},
				},
			},
			{
				ID:          "get_organization",
				Name:        "Get Organization",
				Description: "Get details of a specific organization from Pipedrive",
				ActionType:  PipedriveIntegrationActionType_GetOrganization,
				Properties: []domain.NodeProperty{
					{
						Key:          "id",
						Name:         "Organization ID",
						Description:  "The ID of the organization to retrieve",
						Required:     true,
						Type:         domain.NodePropertyType_Number,
						Peekable:     true,
						PeekableType: PipedriveIntegrationPeekable_Organizations,
					},
				},
			},
			{
				ID:          "delete_organization",
				Name:        "Delete Organization",
				Description: "Delete an organization from Pipedrive",
				ActionType:  PipedriveIntegrationActionType_DeleteOrganization,
				Properties: []domain.NodeProperty{
					{
						Key:          "id",
						Name:         "Organization ID",
						Description:  "The ID of the organization to delete",
						Required:     true,
						Type:         domain.NodePropertyType_Number,
						Peekable:     true,
						PeekableType: PipedriveIntegrationPeekable_Organizations,
					},
				},
			},
			{
				ID:          "list_organizations",
				Name:        "List Organizations",
				Description: "Get a list of all organizations from Pipedrive",
				ActionType:  PipedriveIntegrationActionType_ListOrganizations,
				Properties: []domain.NodeProperty{
					{
						Key:         "cursor",
						Name:        "Cursor",
						Description: "For pagination, the marker representing the first item on the next page",
						Required:    false,
						Type:        domain.NodePropertyType_String,
					},
					{
						Key:         "updated_since",
						Name:        "Updated Since",
						Description: "If set, only organizations with an update_time later than or equal to this time are returned (RFC3339 format, e.g. 2025-01-01T10:20:00Z)",
						Required:    false,
						Type:        domain.NodePropertyType_String,
					},
					{
						Key:         "updated_until",
						Name:        "Updated Until",
						Description: "If set, only organizations with an update_time earlier than this time are returned (RFC3339 format, e.g. 2025-01-01T10:20:00Z)",
						Required:    false,
						Type:        domain.NodePropertyType_String,
					},
					{
						Key:         "sort_by",
						Name:        "Sort By",
						Description: "The field to sort by",
						Required:    false,
						Type:        domain.NodePropertyType_String,
						Options: []domain.NodePropertyOption{
							{Label: "ID", Value: "id"},
							{Label: "Update Time", Value: "update_time"},
							{Label: "Add Time", Value: "add_time"},
						},
					},
					{
						Key:         "sort_direction",
						Name:        "Sort Direction",
						Description: "The sorting direction",
						Required:    false,
						Type:        domain.NodePropertyType_String,
						Options: []domain.NodePropertyOption{
							{Label: "Ascending", Value: "asc"},
							{Label: "Descending", Value: "desc"},
						},
					},
					{
						Key:         "include_fields",
						Name:        "Include Fields",
						Description: "Optional comma separated string array of additional fields to include. ",
						Required:    false,
						Type:        domain.NodePropertyType_ListTagInput,
						Options: []domain.NodePropertyOption{
							{Label: "Next Activity ID", Value: "next_activity_id"},
							{Label: "Last Activity ID", Value: "last_activity_id"},
							{Label: "Open Deals Count", Value: "open_deals_count"},
							{Label: "Related Open Deals Count", Value: "related_open_deals_count"},
							{Label: "Closed Deals Count", Value: "closed_deals_count"},
							{Label: "Related Closed Deals Count", Value: "related_closed_deals_count"},
							{Label: "Participant Open Deals Count", Value: "participant_open_deals_count"},
							{Label: "Participant Closed Deals Count", Value: "participant_closed_deals_count"},
							{Label: "Email Messages Count", Value: "email_messages_count"},
							{Label: "Activities Count", Value: "activities_count"},
							{Label: "Done Activities Count", Value: "done_activities_count"},
							{Label: "Undone Activities Count", Value: "undone_activities_count"},
							{Label: "Files Count", Value: "files_count"},
							{Label: "Notes Count", Value: "notes_count"},
							{Label: "Followers Count", Value: "followers_count"},
							{Label: "Won Deals Count", Value: "won_deals_count"},
							{Label: "Related Won Deals Count", Value: "related_won_deals_count"},
							{Label: "Lost Deals Count", Value: "lost_deals_count"},
							{Label: "Related Lost Deals Count", Value: "related_lost_deals_count"},
							{Label: "Last Incoming Mail Time", Value: "last_incoming_mail_time"},
							{Label: "Last Outgoing Mail Time", Value: "last_outgoing_mail_time"},
							{Label: "Marketing Status", Value: "marketing_status"},
							{Label: "DOI Status", Value: "doi_status"},
						},
					},
				},
			},
			// {
			// 	ID:          "create_note",
			// 	Name:        "Create Note",
			// 	Description: "Create a new note in Pipedrive",
			// 	ActionType:  PipedriveIntegrationActionType_CreateNote,
			// 	Properties: []domain.NodeProperty{
			// 		{
			// 			Key:         "content",
			// 			Name:        "Content",
			// 			Description: "The content of the note",
			// 			Required:    true,
			// 			Type:        domain.NodePropertyType_Text,
			// 		},
			// 		{
			// 			Key:          "deal_id",
			// 			Name:         "Deal ID",
			// 			Description:  "The ID of the deal this note is associated with",
			// 			Required:     false,
			// 			Type:         domain.NodePropertyType_Number,
			// 			Peekable:     true,
			// 			PeekableType: PipedriveIntegrationPeekable_Deals,
			// 		},
			// 		{
			// 			Key:          "person_id",
			// 			Name:         "Person ID",
			// 			Description:  "The ID of the person this note is associated with",
			// 			Required:     false,
			// 			Type:         domain.NodePropertyType_Number,
			// 			Peekable:     true,
			// 			PeekableType: PipedriveIntegrationPeekable_Persons,
			// 		},
			// 		{
			// 			Key:          "org_id",
			// 			Name:         "Organization ID",
			// 			Description:  "The ID of the organization this note is associated with",
			// 			Required:     false,
			// 			Type:         domain.NodePropertyType_Number,
			// 			Peekable:     true,
			// 			PeekableType: PipedriveIntegrationPeekable_Organizations,
			// 		},
			// 		{
			// 			Key:         "lead_id",
			// 			Name:        "Lead ID",
			// 			Description: "The ID of the lead this note is associated with",
			// 			Required:    false,
			// 			Type:        domain.NodePropertyType_String,
			// 		},
			// 	},
			// },
			// {
			// 	ID:          "update_note",
			// 	Name:        "Update Note",
			// 	Description: "Update an existing note in Pipedrive",
			// 	ActionType:  PipedriveIntegrationActionType_UpdateNote,
			// 	Properties: []domain.NodeProperty{
			// 		{
			// 			Key:         "id",
			// 			Name:        "Note ID",
			// 			Description: "The ID of the note to update",
			// 			Required:    true,
			// 			Type:        domain.NodePropertyType_Number,
			// 		},
			// 		{
			// 			Key:         "content",
			// 			Name:        "Content",
			// 			Description: "The content of the note",
			// 			Required:    false,
			// 			Type:        domain.NodePropertyType_String,
			// 		},
			// 		{
			// 			Key:          "deal_id",
			// 			Name:         "Deal ID",
			// 			Description:  "The ID of the deal this note is associated with",
			// 			Required:     false,
			// 			Type:         domain.NodePropertyType_Number,
			// 			Peekable:     true,
			// 			PeekableType: PipedriveIntegrationPeekable_Deals,
			// 		},
			// 		{
			// 			Key:          "person_id",
			// 			Name:         "Person ID",
			// 			Description:  "The ID of the person this note is associated with",
			// 			Required:     false,
			// 			Type:         domain.NodePropertyType_Number,
			// 			Peekable:     true,
			// 			PeekableType: PipedriveIntegrationPeekable_Persons,
			// 		},
			// 		{
			// 			Key:          "org_id",
			// 			Name:         "Organization ID",
			// 			Description:  "The ID of the organization this note is associated with",
			// 			Required:     false,
			// 			Type:         domain.NodePropertyType_Number,
			// 			Peekable:     true,
			// 			PeekableType: PipedriveIntegrationPeekable_Organizations,
			// 		},
			// 	},
			// },
			// {
			// 	ID:          "get_note",
			// 	Name:        "Get Note",
			// 	Description: "Get details of a specific note from Pipedrive",
			// 	ActionType:  PipedriveIntegrationActionType_GetNote,
			// 	Properties: []domain.NodeProperty{
			// 		{
			// 			Key:         "id",
			// 			Name:        "Note ID",
			// 			Description: "The ID of the note to retrieve",
			// 			Required:    true,
			// 			Type:        domain.NodePropertyType_Number,
			// 		},
			// 	},
			// },
			// {
			// 	ID:          "delete_note",
			// 	Name:        "Delete Note",
			// 	Description: "Delete a note from Pipedrive",
			// 	ActionType:  PipedriveIntegrationActionType_DeleteNote,
			// 	Properties: []domain.NodeProperty{
			// 		{
			// 			Key:         "id",
			// 			Name:        "Note ID",
			// 			Description: "The ID of the note to delete",
			// 			Required:    true,
			// 			Type:        domain.NodePropertyType_Number,
			// 		},
			// 	},
			// },
			// {
			// 	ID:          "list_notes",
			// 	Name:        "List Notes",
			// 	Description: "Get a list of all notes from Pipedrive",
			// 	ActionType:  PipedriveIntegrationActionType_ListNotes,
			// 	Properties: []domain.NodeProperty{
			// 		{
			// 			Key:         "limit",
			// 			Name:        "Limit",
			// 			Description: "Number of items to return (max 500)",
			// 			Required:    false,
			// 			Type:        domain.NodePropertyType_Number,
			// 		},
			// 		{
			// 			Key:         "start",
			// 			Name:        "Start",
			// 			Description: "Pagination start",
			// 			Required:    false,
			// 			Type:        domain.NodePropertyType_Number,
			// 		},
			// 		{
			// 			Key:          "deal_id",
			// 			Name:         "Deal ID",
			// 			Description:  "Filter by deal ID",
			// 			Required:     false,
			// 			Type:         domain.NodePropertyType_Number,
			// 			Peekable:     true,
			// 			PeekableType: PipedriveIntegrationPeekable_Deals,
			// 		},
			// 		{
			// 			Key:          "person_id",
			// 			Name:         "Person ID",
			// 			Description:  "Filter by person ID",
			// 			Required:     false,
			// 			Type:         domain.NodePropertyType_Number,
			// 			Peekable:     true,
			// 			PeekableType: PipedriveIntegrationPeekable_Persons,
			// 		},
			// 		{
			// 			Key:          "org_id",
			// 			Name:         "Organization ID",
			// 			Description:  "Filter by organization ID",
			// 			Required:     false,
			// 			Type:         domain.NodePropertyType_Number,
			// 			Peekable:     true,
			// 			PeekableType: PipedriveIntegrationPeekable_Organizations,
			// 		},
			// 	},
			// },
			// {
			// 	ID:          "create_product",
			// 	Name:        "Create Product",
			// 	Description: "Create a new product in Pipedrive",
			// 	ActionType:  PipedriveIntegrationActionType_CreateProduct,
			// 	Properties: []domain.NodeProperty{
			// 		{
			// 			Key:         "name",
			// 			Name:        "Name",
			// 			Description: "The name of the product",
			// 			Required:    true,
			// 			Type:        domain.NodePropertyType_String,
			// 		},
			// 		{
			// 			Key:         "code",
			// 			Name:        "Code",
			// 			Description: "The product code",
			// 			Required:    false,
			// 			Type:        domain.NodePropertyType_String,
			// 		},
			// 		{
			// 			Key:         "unit",
			// 			Name:        "Unit",
			// 			Description: "The unit in which this product is sold",
			// 			Required:    false,
			// 			Type:        domain.NodePropertyType_String,
			// 		},
			// 		{
			// 			Key:         "tax",
			// 			Name:        "Tax",
			// 			Description: "The tax percentage",
			// 			Required:    false,
			// 			Type:        domain.NodePropertyType_Number,
			// 		},
			// 	},
			// },
			// {
			// 	ID:          "update_product",
			// 	Name:        "Update Product",
			// 	Description: "Update an existing product in Pipedrive",
			// 	ActionType:  PipedriveIntegrationActionType_UpdateProduct,
			// 	Properties: []domain.NodeProperty{
			// 		{
			// 			Key:          "id",
			// 			Name:         "Product ID",
			// 			Description:  "The ID of the product to update",
			// 			Required:     true,
			// 			Type:         domain.NodePropertyType_Number,
			// 			Peekable:     true,
			// 			PeekableType: PipedriveIntegrationPeekable_Products,
			// 		},
			// 		{
			// 			Key:         "name",
			// 			Name:        "Name",
			// 			Description: "The name of the product",
			// 			Required:    false,
			// 			Type:        domain.NodePropertyType_String,
			// 		},
			// 		{
			// 			Key:         "code",
			// 			Name:        "Code",
			// 			Description: "The product code",
			// 			Required:    false,
			// 			Type:        domain.NodePropertyType_String,
			// 		},
			// 		{
			// 			Key:         "unit",
			// 			Name:        "Unit",
			// 			Description: "The unit in which this product is sold",
			// 			Required:    false,
			// 			Type:        domain.NodePropertyType_String,
			// 		},
			// 		{
			// 			Key:         "tax",
			// 			Name:        "Tax",
			// 			Description: "The tax percentage",
			// 			Required:    false,
			// 			Type:        domain.NodePropertyType_Number,
			// 		},
			// 	},
			// },
			// {
			// 	ID:          "get_product",
			// 	Name:        "Get Product",
			// 	Description: "Get details of a specific product from Pipedrive",
			// 	ActionType:  PipedriveIntegrationActionType_GetProduct,
			// 	Properties: []domain.NodeProperty{
			// 		{
			// 			Key:          "id",
			// 			Name:         "Product ID",
			// 			Description:  "The ID of the product to retrieve",
			// 			Required:     true,
			// 			Type:         domain.NodePropertyType_Number,
			// 			Peekable:     true,
			// 			PeekableType: PipedriveIntegrationPeekable_Products,
			// 		},
			// 	},
			// },
			// {
			// 	ID:          "delete_product",
			// 	Name:        "Delete Product",
			// 	Description: "Delete a product from Pipedrive",
			// 	ActionType:  PipedriveIntegrationActionType_DeleteProduct,
			// 	Properties: []domain.NodeProperty{
			// 		{
			// 			Key:          "id",
			// 			Name:         "Product ID",
			// 			Description:  "The ID of the product to delete",
			// 			Required:     true,
			// 			Type:         domain.NodePropertyType_Number,
			// 			Peekable:     true,
			// 			PeekableType: PipedriveIntegrationPeekable_Products,
			// 		},
			// 	},
			// },
			// {
			// 	ID:          "list_products",
			// 	Name:        "List Products",
			// 	Description: "Get a list of all products from Pipedrive",
			// 	ActionType:  PipedriveIntegrationActionType_ListProducts,
			// 	Properties: []domain.NodeProperty{
			// 		{
			// 			Key:         "limit",
			// 			Name:        "Limit",
			// 			Description: "Number of items to return (max 500)",
			// 			Required:    false,
			// 			Type:        domain.NodePropertyType_Number,
			// 		},
			// 		{
			// 			Key:         "start",
			// 			Name:        "Start",
			// 			Description: "Pagination start",
			// 			Required:    false,
			// 			Type:        domain.NodePropertyType_Number,
			// 		},
			// 	},
			// },
			// {
			// 	ID:          "create_lead",
			// 	Name:        "Create Lead",
			// 	Description: "Create a new lead in Pipedrive",
			// 	ActionType:  PipedriveIntegrationActionType_CreateLead,
			// 	Properties: []domain.NodeProperty{
			// 		{
			// 			Key:         "title",
			// 			Name:        "Title",
			// 			Description: "The title of the lead",
			// 			Required:    true,
			// 			Type:        domain.NodePropertyType_String,
			// 		},
			// 		{
			// 			Key:          "person_id",
			// 			Name:         "Person ID",
			// 			Description:  "The ID of the person this lead is associated with",
			// 			Required:     false,
			// 			Type:         domain.NodePropertyType_Number,
			// 			Peekable:     true,
			// 			PeekableType: PipedriveIntegrationPeekable_Persons,
			// 		},
			// 		{
			// 			Key:          "organization_id",
			// 			Name:         "Organization ID",
			// 			Description:  "The ID of the organization this lead is associated with",
			// 			Required:     false,
			// 			Type:         domain.NodePropertyType_Number,
			// 			Peekable:     true,
			// 			PeekableType: PipedriveIntegrationPeekable_Organizations,
			// 		},
			// 	},
			// },
			// {
			// 	ID:          "update_lead",
			// 	Name:        "Update Lead",
			// 	Description: "Update an existing lead in Pipedrive",
			// 	ActionType:  PipedriveIntegrationActionType_UpdateLead,
			// 	Properties: []domain.NodeProperty{
			// 		{
			// 			Key:         "id",
			// 			Name:        "Lead ID",
			// 			Description: "The ID of the lead to update",
			// 			Required:    true,
			// 			Type:        domain.NodePropertyType_String,
			// 		},
			// 		{
			// 			Key:         "title",
			// 			Name:        "Title",
			// 			Description: "The title of the lead",
			// 			Required:    false,
			// 			Type:        domain.NodePropertyType_String,
			// 		},
			// 		{
			// 			Key:          "person_id",
			// 			Name:         "Person ID",
			// 			Description:  "The ID of the person this lead is associated with",
			// 			Required:     false,
			// 			Type:         domain.NodePropertyType_Number,
			// 			Peekable:     true,
			// 			PeekableType: PipedriveIntegrationPeekable_Persons,
			// 		},
			// 		{
			// 			Key:          "organization_id",
			// 			Name:         "Organization ID",
			// 			Description:  "The ID of the organization this lead is associated with",
			// 			Required:     false,
			// 			Type:         domain.NodePropertyType_Number,
			// 			Peekable:     true,
			// 			PeekableType: PipedriveIntegrationPeekable_Organizations,
			// 		},
			// 	},
			// },
			// {
			// 	ID:          "get_lead",
			// 	Name:        "Get Lead",
			// 	Description: "Get details of a specific lead from Pipedrive",
			// 	ActionType:  PipedriveIntegrationActionType_GetLead,
			// 	Properties: []domain.NodeProperty{
			// 		{
			// 			Key:         "id",
			// 			Name:        "Lead ID",
			// 			Description: "The ID of the lead to retrieve",
			// 			Required:    true,
			// 			Type:        domain.NodePropertyType_String,
			// 		},
			// 	},
			// },
			// {
			// 	ID:          "delete_lead",
			// 	Name:        "Delete Lead",
			// 	Description: "Delete a lead from Pipedrive",
			// 	ActionType:  PipedriveIntegrationActionType_DeleteLead,
			// 	Properties: []domain.NodeProperty{
			// 		{
			// 			Key:         "id",
			// 			Name:        "Lead ID",
			// 			Description: "The ID of the lead to delete",
			// 			Required:    true,
			// 			Type:        domain.NodePropertyType_String,
			// 		},
			// 	},
			// },
			// {
			// 	ID:          "list_leads",
			// 	Name:        "List Leads",
			// 	Description: "Get a list of all leads from Pipedrive",
			// 	ActionType:  PipedriveIntegrationActionType_ListLeads,
			// 	Properties: []domain.NodeProperty{
			// 		{
			// 			Key:         "limit",
			// 			Name:        "Limit",
			// 			Description: "Number of items to return (max 500)",
			// 			Required:    false,
			// 			Type:        domain.NodePropertyType_Number,
			// 		},
			// 		{
			// 			Key:         "start",
			// 			Name:        "Start",
			// 			Description: "Pagination start",
			// 			Required:    false,
			// 			Type:        domain.NodePropertyType_Number,
			// 		},
			// 	},
			// },
		},
		Triggers: []domain.IntegrationTrigger{},
	}
)
